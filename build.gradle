/*
 * Copyright 2017 Alexander Orlov <alexander.orlov@loxal.net>. All rights reserved.
 */

buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2'
        }
    }
//    dependencies {
//        https://github.com/GoogleCloudPlatform/gradle-appengine-plugin
//        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.42'
// (APPENGINE_HOME ENV or system property required)
//        OR
// appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.42' (with “downloadSdk” set to true)
//    }
}

plugins {
    id "org.springframework.boot" version "1.5.1.RELEASE"
    id "me.champeau.gradle.jmh" version "0.3.1"
}

apply plugin: "java-library"
apply plugin: "idea" 
//apply plugin: "appengine"

jar {
//    baseName = 'quizzer-service'
    baseName = rootProject.name
    version = '1.0.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude module: 'undertow-websockets-jsr'
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"

    compile "org.springframework.data:spring-data-couchbase:2.2.1.RELEASE"
    compile "org.springframework.data:spring-data-cassandra:1.5.1.RELEASE"
    // required to pass Couchbase integration tests while having Cassandra in-place
    testRuntime "io.netty:netty-codec-http2:4.1.8.Final"

    testCompile "org.openjdk.jmh:jmh-generator-annprocess:1.17.4"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE"
}

jmh {
    fork = 0

    duplicateClassesStrategy = 'include'
}

tasks.withType(JavaCompile) {
   options.incremental = true // one flag, and things will get MUCH faster
}